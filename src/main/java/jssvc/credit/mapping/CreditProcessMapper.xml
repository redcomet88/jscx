<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jssvc.credit.dao.CreditProcessMapper" >
  <resultMap id="BaseResultMap" type="jssvc.credit.model.CreditProcess" >
      <id column="id"  property = "id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <result column="code"  property = "code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="credit_Title"  property = "creditTitle" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="credit_Content"  property = "creditContent" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="currentUser"  property = "currentuser" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="status"  property = "status" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="Upload_Dept"  property = "uploadDept" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="Upload_User"  property = "uploadUser" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="create_Time"  property = "createTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <result column="opt_Time"  property = "optTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <result column="column1"  property = "column1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="column2"  property = "column2" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="column3"  property = "column3" jdbcType="TIMESTAMP" javaType="java.util.Date" />
  </resultMap>
  <resultMap id="CreditProcessVoMap" type="jssvc.credit.vo.CreditProcessVo" extends="BaseResultMap">
      <result column="applybankName" property = "applybankName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="applyuserName" property = "applyuserName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="approveStatusName" property = "approveStatusName" jdbcType="VARCHAR" javaType="java.lang.String" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, credit_Title, credit_Content, currentUser, status, Upload_Dept, Upload_User, 
    create_Time, opt_Time, column1, column2, column3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="jssvc.credit.model.CreditProcessExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_credit_process
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_credit_process
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectFlagNumber" parameterType="java.lang.String" resultType="java.lang.String">
    select name from t_constant where type = #{0} and en_key = #{1}
  </select>
  <update id="updateFlagNumber" parameterType="java.lang.String">
     update t_constant set name =#{0} where type = #{1} and en_key = #{2}
  </update>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_credit_process
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="jssvc.credit.model.CreditProcessExample" >
    delete from t_credit_process
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jssvc.credit.model.CreditProcess" >
    insert into t_credit_process (id, code, credit_Title, 
      credit_Content, currentUser, status, 
      Upload_Dept, Upload_User, create_Time, 
      opt_Time, column1, column2, 
      column3)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{creditTitle,jdbcType=VARCHAR}, 
      #{creditContent,jdbcType=VARCHAR}, #{currentuser,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{uploadDept,jdbcType=VARCHAR}, #{uploadUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{optTime,jdbcType=TIMESTAMP}, #{column1,jdbcType=VARCHAR}, #{column2,jdbcType=VARCHAR}, 
      #{column3,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="jssvc.credit.model.CreditProcess" >
    insert into t_credit_process
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="creditTitle != null" >
        credit_Title,
      </if>
      <if test="creditContent != null" >
        credit_Content,
      </if>
      <if test="currentuser != null" >
        currentUser,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="uploadDept != null" >
        Upload_Dept,
      </if>
      <if test="uploadUser != null" >
        Upload_User,
      </if>
      <if test="createTime != null" >
        create_Time,
      </if>
      <if test="optTime != null" >
        opt_Time,
      </if>
      <if test="column1 != null" >
        column1,
      </if>
      <if test="column2 != null" >
        column2,
      </if>
      <if test="column3 != null" >
        column3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="creditTitle != null" >
        #{creditTitle,jdbcType=VARCHAR},
      </if>
      <if test="creditContent != null" >
        #{creditContent,jdbcType=VARCHAR},
      </if>
      <if test="currentuser != null" >
        #{currentuser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="uploadDept != null" >
        #{uploadDept,jdbcType=VARCHAR},
      </if>
      <if test="uploadUser != null" >
        #{uploadUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="optTime != null" >
        #{optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="column1 != null" >
        #{column1,jdbcType=VARCHAR},
      </if>
      <if test="column2 != null" >
        #{column2,jdbcType=VARCHAR},
      </if>
      <if test="column3 != null" >
        #{column3,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jssvc.credit.model.CreditProcessExample" resultType="java.lang.Integer" >
    select count(*) from t_credit_process
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="getCreditProcessList" resultMap="CreditProcessVoMap" parameterType="jssvc.credit.vo.filter.CreditProcessSearchFilter" >
    select
    suggest.*,ii.jgmc as applybankName,u.ygxm as applyuserName from t_credit_process suggest
    left join t_dept_info ii on (suggest.upload_dept=ii.jgh)
    left join t_user u     on (suggest.upload_user=u.dah)
    where 1=1
    <if test="code != null and '' != code" >
      and suggest.code = #{code, jdbcType=VARCHAR}
    </if>
    <if test="title != null and '' != title" >
      and suggest.credit_Title like concat('%', #{title,jdbcType=VARCHAR}, '%')
    </if>

    <if test="sortField != null and '' != sortField" >
      order by suggest.${sortField} ${sortOrder}
    </if>
    <if test="limit != 0" >
      limit #{offset},#{limit}
    </if>
  </select>
  <select id="getCreditProcessListCount" resultType="java.lang.Integer" parameterType="jssvc.credit.vo.filter.CreditProcessSearchFilter" >
  select count(*) from t_credit_process suggest
  left join t_dept_info ii on (suggest.upload_dept=ii.jgh)
  left join t_user u              on (suggest.upload_user=u.dah)
  where 1=1
  <if test="code != null and '' != code" >
    and suggest.code = #{code, jdbcType=VARCHAR}
  </if>
  <if test="title != null and '' != title" >
    and suggest.credit_Title like concat('%', #{title,jdbcType=VARCHAR}, '%')
  </if>
</select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_credit_process
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.creditTitle != null" >
        credit_Title = #{record.creditTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.creditContent != null" >
        credit_Content = #{record.creditContent,jdbcType=VARCHAR},
      </if>
      <if test="record.currentuser != null" >
        currentUser = #{record.currentuser,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadDept != null" >
        Upload_Dept = #{record.uploadDept,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadUser != null" >
        Upload_User = #{record.uploadUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_Time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.optTime != null" >
        opt_Time = #{record.optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.column1 != null" >
        column1 = #{record.column1,jdbcType=VARCHAR},
      </if>
      <if test="record.column2 != null" >
        column2 = #{record.column2,jdbcType=VARCHAR},
      </if>
      <if test="record.column3 != null" >
        column3 = #{record.column3,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_credit_process
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      credit_Title = #{record.creditTitle,jdbcType=VARCHAR},
      credit_Content = #{record.creditContent,jdbcType=VARCHAR},
      currentUser = #{record.currentuser,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      Upload_Dept = #{record.uploadDept,jdbcType=VARCHAR},
      Upload_User = #{record.uploadUser,jdbcType=VARCHAR},
      create_Time = #{record.createTime,jdbcType=TIMESTAMP},
      opt_Time = #{record.optTime,jdbcType=TIMESTAMP},
      column1 = #{record.column1,jdbcType=VARCHAR},
      column2 = #{record.column2,jdbcType=VARCHAR},
      column3 = #{record.column3,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jssvc.credit.model.CreditProcess" >
    update t_credit_process
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="creditTitle != null" >
        credit_Title = #{creditTitle,jdbcType=VARCHAR},
      </if>
      <if test="creditContent != null" >
        credit_Content = #{creditContent,jdbcType=VARCHAR},
      </if>
      <if test="currentuser != null" >
        currentUser = #{currentuser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="uploadDept != null" >
        Upload_Dept = #{uploadDept,jdbcType=VARCHAR},
      </if>
      <if test="uploadUser != null" >
        Upload_User = #{uploadUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_Time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="optTime != null" >
        opt_Time = #{optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="column1 != null" >
        column1 = #{column1,jdbcType=VARCHAR},
      </if>
      <if test="column2 != null" >
        column2 = #{column2,jdbcType=VARCHAR},
      </if>
      <if test="column3 != null" >
        column3 = #{column3,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="jssvc.credit.model.CreditProcess" >
    update t_credit_process
    set code = #{code,jdbcType=VARCHAR},
      credit_Title = #{creditTitle,jdbcType=VARCHAR},
      credit_Content = #{creditContent,jdbcType=VARCHAR},
      currentUser = #{currentuser,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      Upload_Dept = #{uploadDept,jdbcType=VARCHAR},
      Upload_User = #{uploadUser,jdbcType=VARCHAR},
      create_Time = #{createTime,jdbcType=TIMESTAMP},
      opt_Time = #{optTime,jdbcType=TIMESTAMP},
      column1 = #{column1,jdbcType=VARCHAR},
      column2 = #{column2,jdbcType=VARCHAR},
      column3 = #{column3,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>