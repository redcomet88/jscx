<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jssvc.credit.dao.CreditIndexMapper" >
  <resultMap id="BaseResultMap" type="jssvc.credit.model.CreditIndex" >
      <id column="id" property="id" jdbcType="VARCHAR" />
      <result column="level" property="level" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <result column="parrent_id" property="parrentId" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="name" property="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="weight" property="weight" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <result column="credit_action" property="creditAction" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="sort" property="sort" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <result column="column1" property="column1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="column2" property="column2" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="column3" property="column3" jdbcType="TIMESTAMP" javaType="java.util.Date" />
  </resultMap>
  <resultMap id="creditInfoVoMap" type="jssvc.credit.vo.CreditIndexVo" extends="BaseResultMap">
      <result column="topIndexName" property="topIndexName" jdbcType="VARCHAR"/>
  </resultMap>
  <select id="getCreditIndexList" resultMap="creditInfoVoMap" parameterType="jssvc.credit.vo.filter.CreditIndexSearchFilter">
      select
          a.*, b.name as topIndexName from  t_credit_index a ,t_credit_index b
          where 1=1
          and a.parrent_id = b.id
          and a.level = #{level,jdbcType=INTEGER}
          <if test="name != null and '' != name">
            and a.name like  concat('%',#{name,jdbcType=VARCHAR},'%')
          </if>
           <if test="topIndexName != null and '' != topIndexName">
            and b.name like  concat('%',#{topIndexName,jdbcType=VARCHAR},'%')
          </if>
          <if test="dah != null and '' != dah and dah != 'admin' ">
            and  a.column1 IN
            ( select da.jgh  from  jscx.t_data_authority da ,jscx.t_user u
              where  da.dah = u.dah and u.dah =  #{dah,jdbcType=VARCHAR})
          </if>
          <if test="sortField != null and '' != sortField">
             order by a.${sortField} ${sortOrder}
          </if>
          <if test="limit != 0">
            limit #{offset},#{limit}
          </if>
  </select>
  <select id="getCreditIndexListCount" resultType="java.lang.Integer" parameterType="jssvc.credit.vo.filter.CreditIndexSearchFilter">
    select count(*) from  t_credit_index a ,t_credit_index b
    where 1=1
    and a.parrent_id = b.id
    and a.level = #{level,jdbcType=INTEGER}
    <if test="name != null and '' != name">
      and a.name like  concat('%',#{name,jdbcType=VARCHAR},'%')
    </if>
    <if test="topIndexName != null and '' != topIndexName">
      and b.name like  concat('%',#{topIndexName,jdbcType=VARCHAR},'%')
    </if>
    <if test="dah != null and '' != dah and dah != 'admin' ">
      and  a.column1 IN
      ( select da.jgh  from  jscx.t_data_authority da ,jscx.t_user u
      where  da.dah = u.dah and u.dah =  #{dah,jdbcType=VARCHAR})
    </if>
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, level, parrent_id, name, weight, credit_action, sort, column1, column2, column3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="jssvc.credit.model.CreditIndexExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_credit_index
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_credit_index
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_credit_index
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="jssvc.credit.model.CreditIndexExample" >
    delete from t_credit_index
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jssvc.credit.model.CreditIndex" >
    insert into t_credit_index (id, level, parrent_id,
      name, weight, credit_action,
      sort, column1, column2,
      column3)
    values (#{id,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{parrentId,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{weight,jdbcType=DOUBLE}, #{creditAction,jdbcType=VARCHAR},
      #{sort,jdbcType=INTEGER}, #{column1,jdbcType=VARCHAR}, #{column2,jdbcType=VARCHAR},
      #{column3,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="jssvc.credit.model.CreditIndex" >
    insert into t_credit_index
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="parrentId != null" >
        parrent_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="creditAction != null" >
        credit_action,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="column1 != null" >
        column1,
      </if>
      <if test="column2 != null" >
        column2,
      </if>
      <if test="column3 != null" >
        column3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="parrentId != null" >
        #{parrentId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=DOUBLE},
      </if>
      <if test="creditAction != null" >
        #{creditAction,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="column1 != null" >
        #{column1,jdbcType=VARCHAR},
      </if>
      <if test="column2 != null" >
        #{column2,jdbcType=VARCHAR},
      </if>
      <if test="column3 != null" >
        #{column3,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jssvc.credit.model.CreditIndexExample" resultType="java.lang.Integer" >
    select count(*) from t_credit_index
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_credit_index
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.parrentId != null" >
        parrent_id = #{record.parrentId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null" >
        weight = #{record.weight,jdbcType=DOUBLE},
      </if>
      <if test="record.creditAction != null" >
        credit_action = #{record.creditAction,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.column1 != null" >
        column1 = #{record.column1,jdbcType=VARCHAR},
      </if>
      <if test="record.column2 != null" >
        column2 = #{record.column2,jdbcType=VARCHAR},
      </if>
      <if test="record.column3 != null" >
        column3 = #{record.column3,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_credit_index
    set id = #{record.id,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      parrent_id = #{record.parrentId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=DOUBLE},
      credit_action = #{record.creditAction,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      column1 = #{record.column1,jdbcType=VARCHAR},
      column2 = #{record.column2,jdbcType=VARCHAR},
      column3 = #{record.column3,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jssvc.credit.model.CreditIndex" >
    update t_credit_index
    <set >
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="parrentId != null" >
        parrent_id = #{parrentId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=DOUBLE},
      </if>
      <if test="creditAction != null" >
        credit_action = #{creditAction,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="column1 != null" >
        column1 = #{column1,jdbcType=VARCHAR},
      </if>
      <if test="column2 != null" >
        column2 = #{column2,jdbcType=VARCHAR},
      </if>
      <if test="column3 != null" >
        column3 = #{column3,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="jssvc.credit.model.CreditIndex" >
    update t_credit_index
    set level = #{level,jdbcType=INTEGER},
      parrent_id = #{parrentId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=DOUBLE},
      credit_action = #{creditAction,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      column1 = #{column1,jdbcType=VARCHAR},
      column2 = #{column2,jdbcType=VARCHAR},
      column3 = #{column3,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>